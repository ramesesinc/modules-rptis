import com.rameses.annotations.*;
import java.io.File;
import com.rameses.fileupload.*;
import org.apache.commons.lang.exception.ExceptionUtils;

class DownloadTask {
    @XConnection('fileupload')
    def fu;

    @Service('RPTMainSyncDataService')
    def svc

    @DataContext('rpt_syncdata_error')
    def em_sync_error

    @Schedule(interval=120)
    public void doDownload( evt ) {
        try {
            fu.getList().each{
                download(it);
            }
        } catch ( e ) {
            println "DownlaodTask [ERROR] " + e.message;
        }
    }

    void download(downloadinfo) {
        def reader = null;
        def syncdata = null;
        try {
            syncdata = em_sync_error.find([filekey: downloadinfo.Key]).first();
            if (syncdata) {
                println 'DownloadTask [HOLD] Key ' + downloadinfo.Key
                return;
            }
            reader = fu.getObject(downloadinfo.Key);
            syncdata = reader.read();
            syncdata.data = reader.read(); 
            svc.receive(syncdata)
            reader.close();
            fu.delete(downloadinfo.Key);
        } catch (e) {
            println 'DownloadTask [ERROR] ' + e.message
            if (syncdata) {
                syncdata.filekey = downloadinfo.Key;
                syncdata.error = ExceptionUtils.getStackTrace(e);
                syncdata.info = syncdata.info ? syncdata.info : [:]
                syncdata.remote = syncdata.parent.remote
                em_sync_error.create(syncdata);
            }
            if (reader) reader.close();
        }
    }
}