import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;

class RPTCommonDataExporterService
{   
	@Service('ExaminationService')
    def examinationSvc

    @Service('RPTRequirementService')
    def reqSvc 

    @DataContext('dbimage_header')
    def em_image_header

    @DataContext('dbimage_chunk')
    def em_image_chunk



	@ProxyMethod
	public void exportExaminations(writer, parentid) {
		examinationSvc.getFindings(parentid).each{ examination ->
			writer.writeObject([filetype: 'examination', data: examination])
			exportImages(writer, examination.objid)
        }
	}

	@ProxyMethod
	public void exportRequirements(writer, parentid) {
		reqSvc.getRequirements(parentid).each{requirement ->
			writer.writeObject([filetype: 'requirement', data: requirement])
            scheduleImages(writer, requirement.objid)
        }
	}

	@ProxyMethod
	public void exportImages(writer, parentid) {
		em_image_header.find([refid: parentid]).list().each{header->
			def file = [filetype: 'image', data: [:]]
			file.data.header = header
			file.data.chunks = em_image_chunk.find([parentid: header.objid]).list()
			writer.writeObect(file)
        }
	}	

}